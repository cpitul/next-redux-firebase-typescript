import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Langs, LS, StateStatus } from '@utils/declarations/enums';

export interface AppState {
	status: StateStatus;
	lang: Langs;
}

export const initialAppState: AppState = {
	status: StateStatus.idle,
	lang: Langs.en,
};

export const appSlice = createSlice({
	name: 'app',
	initialState: initialAppState,
	// The `reducers` field lets us define reducers and generate associated actions
	reducers: {
		setAppLang: (state: AppState, action: PayloadAction<Langs>) => {
			state.lang = action.payload;
			localStorage && action.payload && localStorage.setItem(LS.LANG, JSON.stringify(action.payload));
		},
		setAppStatus: (state: AppState, action: PayloadAction<StateStatus>) => {
			state.status = action.payload;
		},
	},
	// The `extraReducers` field lets the slice handle actions defined elsewhere,
	// including actions generated by createAsyncThunk or in other slices.
	// extraReducers: builder => {},
});

export const { setAppLang, setAppStatus } = appSlice.actions;
export default appSlice.reducer;
